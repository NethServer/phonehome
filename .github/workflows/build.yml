name: Build
on:
  schedule:
    - cron: "0 5 * * 1"
  workflow_call:
jobs:
  build-image:
    name: Build ${{ matrix.image }} image and push
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        image:
          - app
          - web
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Create new buildx builder
        uses: docker/setup-buildx-action@v2

      - name: Generate tags
        uses: docker/metadata-action@v4
        id: meta
        with:
          bake-target: ${{ matrix.image }}
          images: |
            ghcr.io/${{ github.repository }}-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/0.') }}

      - name: Generate cache tag
        uses: docker/metadata-action@v4
        id: cache-tag
        with:
          images: |
            ghcr.io/${{ github.repository }}-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=raw,enable=${{ github.ref_type == 'tag' }},value=${{ github.event.repository.default_branch }}
          flavor:
            suffix=-cache

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/bake-action@v2.3.0
        with:
          targets: ${{ matrix.image }}
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          set: |
            *.platform=linux/amd64
            *.cache-from=type=registry,ref=${{ steps.cache-tag.outputs.tags }}
            *.cache-to=type=registry,ref=${{ steps.cache-tag.outputs.tags }},mode=max
          push: true

  build-deploy:
    name: Build NS8 deploy image
    runs-on: ubuntu-22.04
    needs: build-image
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Generate tags
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ghcr.io/nethserver/ns8-phonehome
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Generate Phonehome image tags
        uses: docker/metadata-action@v4
        id: phonehome-tags
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image with buildah
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          LABELS: ${{ steps.meta.outputs.labels }}
          ARGS: |
            PHONEHOME_TAG=${{ steps.phonehome-tags.outputs.version }}
            PHONEHOME_SERVER_APP=${{ steps.phonehome-tags.outputs.tags }}-app
            PHONEHOME_SERVER_WEB=${{ steps.phonehome-tags.outputs.tags }}-web
        working-directory: deploy/ns8
        run: |
          ./build-images.sh

      - name: Push image to registry
        run: |
          PUSH_TAGS='${{ steps.meta.outputs.tags }}'
          for tag in $PUSH_TAGS; do
            podman push "$tag"
          done
