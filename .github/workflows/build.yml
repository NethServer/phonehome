name: Build
on:
  workflow_call:
    inputs:
      push:
        type: boolean
        required: false
        default: false
    secrets:
      registry_username:
        required: false
      registry_password:
        required: false

env:
  repository: tbaile/phonehome
  registry_username: ${{ secrets.registry_username }}
  registry_password: ${{ secrets.registry_password }}

jobs:
  build-image:
    name: Build ${{ matrix.image }} image
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        image:
          - app
          - web
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate tags
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ${{ env.repository }}-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Generate tags to fetch cache from
        uses: docker/metadata-action@v4
        id: meta-cache
        with:
          images: |
            ${{ env.repository }}-${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=false
            suffix=-cache

      - name: Login to registry
        uses: docker/login-action@v2
        if: ${{ env.registry_username != '' && env.registry_password != '' }}
        with:
          username: ${{ secrets.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: Build config
        id: buildx_set
        run: |
          touch buildx_set
          echo "*.cache-from=type=registry,ref=${{ env.repository }}-${{ matrix.image }}:master" >> buildx_set
          for cache in ${{ join(fromJSON(steps.meta-cache.outputs.json).tags, ' ') }}; do
            echo "*.cache-from=type=registry,ref=$cache" >> buildx_set
          done
          if [[ "${{ env.registry_username != '' && env.registry_password != '' }}" -eq "true" ]]; then
            for cache in ${{ join(fromJSON(steps.meta-cache.outputs.json).tags, ' ') }}; do
              echo "*.cache-to=type=registry,ref=$cache,mode=max" >> buildx_set
            done
          fi
          echo "$(cat buildx_set)"
          echo "::set-output name=file::$(cat buildx_set)"

      - name: Build images
        uses: docker/bake-action@v2.2.0
        with:
          targets: ${{ matrix.image }}-release
          set: |
            ${{ steps.buildx_set.outputs.file }}
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          push: ${{ inputs.push }}
